# Makefile.in generated automatically by automake 1.4a from Makefile.am

# Copyright (C) 1994, 1995-9, 2000 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_FLAG =
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

@SET_MAKE@
host_alias = @host_alias@
host_triplet = @host@
AMDEP = @AMDEP@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
BASH = @BASH@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DL_LIBS = @DL_LIBS@
EXEEXT = @EXEEXT@
LEX = @LEX@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MALLOC_LIBS = @MALLOC_LIBS@
MV = @MV@
OBJC = @OBJC@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
READLINE_LIBS = @READLINE_LIBS@
RM = @RM@
SOCKET_LIBS = @SOCKET_LIBS@
STRIP = @STRIP@
THREAD = @THREAD@
THREAD_LIBS = @THREAD_LIBS@
VERSION = @VERSION@
YACC = @YACC@
install_sh = @install_sh@
thread_safe_flag_spec = @thread_safe_flag_spec@



AUTOMAKE_OPTIONS = no-dependencies 1.4 foreign

INCLUDES = -I$(top_builddir)/src/gdk -I$(top_builddir)/src/monet
MTSAFE = 
lib_aggr_la_SOURCES = aggr.proto.h aggr_glue.c aggr.c
lib_alarm_la_SOURCES = alarm.proto.h alarm_glue.c alarm.c alarm.h
lib_algebra_la_SOURCES = algebra.proto.h algebra_glue.c algebra.c
lib_arith_la_SOURCES = arith.proto.h arith_glue.c arith.c arith.h
lib_bat_la_SOURCES = bat.proto.h bat_glue.c bat.c
lib_bitset_la_SOURCES = bitset.proto.h bitset_glue.c bitset.c bitset.h
lib_bitvector_la_SOURCES = bitvector.proto.h bitvector_glue.c bitvector.c
lib_blob_la_SOURCES = blob.proto.h blob_glue.c blob.c blob.h
lib_cluster_la_SOURCES = cluster.proto.h cluster_glue.c cluster.c
lib_counters_la_SOURCES = counters.proto.h counters_glue.c counters.c counters.h
lib_ddbench_la_SOURCES = ddbench.proto.h ddbench_glue.c ddbench.c ddbench.h
lib_decimal_la_SOURCES = decimal.proto.h decimal_glue.c decimal.c decimal.h
lib_enum_la_SOURCES = enum.proto.h enum_glue.c enum.c
lib_io_la_SOURCES = io.proto.h io_glue.c io.c io.h
lib_iterator_la_SOURCES = iterator.proto.h iterator_glue.c iterator.c iterator.h
lib_kernel_la_SOURCES = kernel.proto.h kernel_glue.c kernel.c
lib_lock_la_SOURCES = lock.proto.h lock_glue.c lock.c
lib_malalgebra_la_SOURCES = malalgebra.proto.h malalgebra_glue.c malalgebra.c malalgebra.h
lib_mmath_la_SOURCES = mmath.proto.h mmath_glue.c mmath.c mmath.h
lib_monettime_la_SOURCES = monettime.proto.h monettime_glue.c monettime.c monettime.h
lib_mprof_la_SOURCES = mprof.proto.h mprof_glue.c mprof.c mprof.h
lib_oo7_la_SOURCES = oo7.proto.h oo7_glue.c oo7.c
lib_perfex_la_SOURCES = perfex.proto.h perfex_glue.c perfex.c perfex.h
lib_qt_la_SOURCES = qt.proto.h qt_glue.c qt.c
lib_radix_la_SOURCES = radix.proto.h radix_glue.c radix.c
lib_salgebra_la_SOURCES = salgebra.proto.h salgebra_glue.c salgebra.c salgebra.h
lib_stats_la_SOURCES = stats.proto.h stats_glue.c stats.c
lib_str_la_SOURCES = str.proto.h str_glue.c str.c str.h
lib_sys_la_SOURCES = sys.proto.h sys_glue.c sys.c sys.h
lib_tcpip_la_SOURCES = tcpip.proto.h tcpip_glue.c tcpip.c tcpip.h
lib_temporal_la_SOURCES = temporal.proto.h temporal_glue.c temporal.cc temporal.h
lib_tpcd_la_SOURCES = tpcd.proto.h tpcd_glue.c tpcd.c
lib_trans_la_SOURCES = trans.proto.h trans_glue.c trans.c
lib_uchr_la_SOURCES = uchr.proto.h uchr_glue.c uchr.c
lib_unix_la_SOURCES = unix.proto.h unix_glue.c unix.c
lib_url_la_SOURCES = url.proto.h url_glue.c url.c
lib_vector_la_SOURCES = vector.proto.h vector_glue.c vector.cc vector.h
lib_wisc_la_SOURCES = wisc.proto.h wisc_glue.c wisc.c wisc.h
lib_xtables_la_SOURCES = xtables.proto.h xtables_glue.c xtables.c
plain_scripts = aggr.mil algebra.mil arith.mil bitset.mil bitvector.mil blob.mil counters.mil ddbench.mil decimal.mil io.mil iterator.mil malalgebra.mil mmath.mil monettime.mil mprof.mil perfex.mil radix.mil salgebra.mil str.mil temporal.mil uchr.mil url.mil vector.mil xtables.mil
BUILT_SOURCES = aggr.proto.h aggr_glue.c aggr.c alarm.proto.h alarm_glue.c alarm.c alarm.h algebra.proto.h algebra_glue.c algebra.c arith.proto.h arith_glue.c arith.c arith.h bat.proto.h bat_glue.c bat.c bitset.proto.h bitset_glue.c bitset.c bitset.h bitvector.proto.h bitvector_glue.c bitvector.c blob.proto.h blob_glue.c blob.c blob.h cluster.proto.h cluster_glue.c cluster.c counters.proto.h counters_glue.c counters.c counters.h ddbench.proto.h ddbench_glue.c ddbench.c ddbench.h decimal.proto.h decimal_glue.c decimal.c decimal.h enum.proto.h enum_glue.c enum.c io.proto.h io_glue.c io.c io.h iterator.proto.h iterator_glue.c iterator.c iterator.h kernel.proto.h kernel_glue.c kernel.c lock.proto.h lock_glue.c lock.c malalgebra.proto.h malalgebra_glue.c malalgebra.c malalgebra.h mmath.proto.h mmath_glue.c mmath.c mmath.h monettime.proto.h monettime_glue.c monettime.c monettime.h mprof.proto.h mprof_glue.c mprof.c mprof.h oo7.proto.h oo7_glue.c oo7.c perfex.proto.h perfex_glue.c perfex.c perfex.h qt.proto.h qt_glue.c qt.c radix.proto.h radix_glue.c radix.c salgebra.proto.h salgebra_glue.c salgebra.c salgebra.h stats.proto.h stats_glue.c stats.c str.proto.h str_glue.c str.c str.h sys.proto.h sys_glue.c sys.c sys.h tcpip.proto.h tcpip_glue.c tcpip.c tcpip.h temporal.proto.h temporal_glue.c temporal.cc temporal.h tpcd.proto.h tpcd_glue.c tpcd.c trans.proto.h trans_glue.c trans.c uchr.proto.h uchr_glue.c uchr.c unix.proto.h unix_glue.c unix.c url.proto.h url_glue.c url.c vector.proto.h vector_glue.c vector.cc vector.h wisc.proto.h wisc_glue.c wisc.c wisc.h xtables.proto.h xtables_glue.c xtables.c $(plain_scripts)
EXTRA_DIST = Makefile.ag Makefile.msc aggr.mx alarm.mx algebra.mx arith.mx bat.mx bitset.mx bitvector.mx blob.mx cluster.mx counters.mx ddbench.mx decimal.mx enum.mx io.mx iterator.mx kernel.mx lock.mx malalgebra.mx mmath.mx monettime.mx mprof.mx oo7.mx perfex.mx qt.mx radix.mx salgebra.mx stats.mx str.mx sys.mx tcpip.mx temporal.mx tpcd.mx trans.mx uchr.mx unix.mx url.mx vector.mx wisc.mx xtables.mx
lib_LTLIBRARIES = lib_aggr.la lib_alarm.la lib_algebra.la lib_arith.la lib_bat.la lib_bitset.la lib_bitvector.la lib_blob.la lib_cluster.la lib_counters.la lib_ddbench.la lib_decimal.la lib_enum.la lib_io.la lib_iterator.la lib_kernel.la lib_lock.la lib_malalgebra.la lib_mmath.la lib_monettime.la lib_mprof.la lib_oo7.la lib_perfex.la lib_qt.la lib_radix.la lib_salgebra.la lib_stats.la lib_str.la lib_sys.la lib_tcpip.la lib_temporal.la lib_tpcd.la lib_trans.la lib_uchr.la lib_unix.la lib_url.la lib_vector.la lib_wisc.la lib_xtables.la
plainincludedir = $(includedir)/plain
plaininclude_HEADERS = alarm.h arith.h bitset.h blob.h counters.h ddbench.h decimal.h io.h iterator.h malalgebra.h mmath.h monettime.h mprof.h perfex.h salgebra.h str.h sys.h tcpip.h temporal.h vector.h wisc.h

MEL = $(top_builddir)/src/mel/mel
MX = $(top_builddir)/src/utils/Mx/Mx

SUFFIXES = .m .mx .proto.h .mil
PRECIOUS = .m 
subdir = src/modules/plain
mkinstalldirs = $(SHELL) $(top_srcdir)/conf/mkinstalldirs
CONFIG_HEADER = ../../../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(lib_LTLIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I../../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
lib_aggr_la_LDFLAGS = 
lib_aggr_la_LIBADD = 
am_lib_aggr_la_OBJECTS =  aggr_glue.lo aggr.lo
lib_aggr_la_OBJECTS =  $(am_lib_aggr_la_OBJECTS)
lib_alarm_la_LDFLAGS = 
lib_alarm_la_LIBADD = 
am_lib_alarm_la_OBJECTS =  alarm_glue.lo alarm.lo
lib_alarm_la_OBJECTS =  $(am_lib_alarm_la_OBJECTS)
lib_algebra_la_LDFLAGS = 
lib_algebra_la_LIBADD = 
am_lib_algebra_la_OBJECTS =  algebra_glue.lo algebra.lo
lib_algebra_la_OBJECTS =  $(am_lib_algebra_la_OBJECTS)
lib_arith_la_LDFLAGS = 
lib_arith_la_LIBADD = 
am_lib_arith_la_OBJECTS =  arith_glue.lo arith.lo
lib_arith_la_OBJECTS =  $(am_lib_arith_la_OBJECTS)
lib_bat_la_LDFLAGS = 
lib_bat_la_LIBADD = 
am_lib_bat_la_OBJECTS =  bat_glue.lo bat.lo
lib_bat_la_OBJECTS =  $(am_lib_bat_la_OBJECTS)
lib_bitset_la_LDFLAGS = 
lib_bitset_la_LIBADD = 
am_lib_bitset_la_OBJECTS =  bitset_glue.lo bitset.lo
lib_bitset_la_OBJECTS =  $(am_lib_bitset_la_OBJECTS)
lib_bitvector_la_LDFLAGS = 
lib_bitvector_la_LIBADD = 
am_lib_bitvector_la_OBJECTS =  bitvector_glue.lo bitvector.lo
lib_bitvector_la_OBJECTS =  $(am_lib_bitvector_la_OBJECTS)
lib_blob_la_LDFLAGS = 
lib_blob_la_LIBADD = 
am_lib_blob_la_OBJECTS =  blob_glue.lo blob.lo
lib_blob_la_OBJECTS =  $(am_lib_blob_la_OBJECTS)
lib_cluster_la_LDFLAGS = 
lib_cluster_la_LIBADD = 
am_lib_cluster_la_OBJECTS =  cluster_glue.lo cluster.lo
lib_cluster_la_OBJECTS =  $(am_lib_cluster_la_OBJECTS)
lib_counters_la_LDFLAGS = 
lib_counters_la_LIBADD = 
am_lib_counters_la_OBJECTS =  counters_glue.lo counters.lo
lib_counters_la_OBJECTS =  $(am_lib_counters_la_OBJECTS)
lib_ddbench_la_LDFLAGS = 
lib_ddbench_la_LIBADD = 
am_lib_ddbench_la_OBJECTS =  ddbench_glue.lo ddbench.lo
lib_ddbench_la_OBJECTS =  $(am_lib_ddbench_la_OBJECTS)
lib_decimal_la_LDFLAGS = 
lib_decimal_la_LIBADD = 
am_lib_decimal_la_OBJECTS =  decimal_glue.lo decimal.lo
lib_decimal_la_OBJECTS =  $(am_lib_decimal_la_OBJECTS)
lib_enum_la_LDFLAGS = 
lib_enum_la_LIBADD = 
am_lib_enum_la_OBJECTS =  enum_glue.lo enum.lo
lib_enum_la_OBJECTS =  $(am_lib_enum_la_OBJECTS)
lib_io_la_LDFLAGS = 
lib_io_la_LIBADD = 
am_lib_io_la_OBJECTS =  io_glue.lo io.lo
lib_io_la_OBJECTS =  $(am_lib_io_la_OBJECTS)
lib_iterator_la_LDFLAGS = 
lib_iterator_la_LIBADD = 
am_lib_iterator_la_OBJECTS =  iterator_glue.lo iterator.lo
lib_iterator_la_OBJECTS =  $(am_lib_iterator_la_OBJECTS)
lib_kernel_la_LDFLAGS = 
lib_kernel_la_LIBADD = 
am_lib_kernel_la_OBJECTS =  kernel_glue.lo kernel.lo
lib_kernel_la_OBJECTS =  $(am_lib_kernel_la_OBJECTS)
lib_lock_la_LDFLAGS = 
lib_lock_la_LIBADD = 
am_lib_lock_la_OBJECTS =  lock_glue.lo lock.lo
lib_lock_la_OBJECTS =  $(am_lib_lock_la_OBJECTS)
lib_malalgebra_la_LDFLAGS = 
lib_malalgebra_la_LIBADD = 
am_lib_malalgebra_la_OBJECTS =  malalgebra_glue.lo malalgebra.lo
lib_malalgebra_la_OBJECTS =  $(am_lib_malalgebra_la_OBJECTS)
lib_mmath_la_LDFLAGS = 
lib_mmath_la_LIBADD = 
am_lib_mmath_la_OBJECTS =  mmath_glue.lo mmath.lo
lib_mmath_la_OBJECTS =  $(am_lib_mmath_la_OBJECTS)
lib_monettime_la_LDFLAGS = 
lib_monettime_la_LIBADD = 
am_lib_monettime_la_OBJECTS =  monettime_glue.lo monettime.lo
lib_monettime_la_OBJECTS =  $(am_lib_monettime_la_OBJECTS)
lib_mprof_la_LDFLAGS = 
lib_mprof_la_LIBADD = 
am_lib_mprof_la_OBJECTS =  mprof_glue.lo mprof.lo
lib_mprof_la_OBJECTS =  $(am_lib_mprof_la_OBJECTS)
lib_oo7_la_LDFLAGS = 
lib_oo7_la_LIBADD = 
am_lib_oo7_la_OBJECTS =  oo7_glue.lo oo7.lo
lib_oo7_la_OBJECTS =  $(am_lib_oo7_la_OBJECTS)
lib_perfex_la_LDFLAGS = 
lib_perfex_la_LIBADD = 
am_lib_perfex_la_OBJECTS =  perfex_glue.lo perfex.lo
lib_perfex_la_OBJECTS =  $(am_lib_perfex_la_OBJECTS)
lib_qt_la_LDFLAGS = 
lib_qt_la_LIBADD = 
am_lib_qt_la_OBJECTS =  qt_glue.lo qt.lo
lib_qt_la_OBJECTS =  $(am_lib_qt_la_OBJECTS)
lib_radix_la_LDFLAGS = 
lib_radix_la_LIBADD = 
am_lib_radix_la_OBJECTS =  radix_glue.lo radix.lo
lib_radix_la_OBJECTS =  $(am_lib_radix_la_OBJECTS)
lib_salgebra_la_LDFLAGS = 
lib_salgebra_la_LIBADD = 
am_lib_salgebra_la_OBJECTS =  salgebra_glue.lo salgebra.lo
lib_salgebra_la_OBJECTS =  $(am_lib_salgebra_la_OBJECTS)
lib_stats_la_LDFLAGS = 
lib_stats_la_LIBADD = 
am_lib_stats_la_OBJECTS =  stats_glue.lo stats.lo
lib_stats_la_OBJECTS =  $(am_lib_stats_la_OBJECTS)
lib_str_la_LDFLAGS = 
lib_str_la_LIBADD = 
am_lib_str_la_OBJECTS =  str_glue.lo str.lo
lib_str_la_OBJECTS =  $(am_lib_str_la_OBJECTS)
lib_sys_la_LDFLAGS = 
lib_sys_la_LIBADD = 
am_lib_sys_la_OBJECTS =  sys_glue.lo sys.lo
lib_sys_la_OBJECTS =  $(am_lib_sys_la_OBJECTS)
lib_tcpip_la_LDFLAGS = 
lib_tcpip_la_LIBADD = 
am_lib_tcpip_la_OBJECTS =  tcpip_glue.lo tcpip.lo
lib_tcpip_la_OBJECTS =  $(am_lib_tcpip_la_OBJECTS)
lib_temporal_la_LDFLAGS = 
lib_temporal_la_LIBADD = 
am_lib_temporal_la_OBJECTS =  temporal_glue.lo temporal.lo
lib_temporal_la_OBJECTS =  $(am_lib_temporal_la_OBJECTS)
lib_tpcd_la_LDFLAGS = 
lib_tpcd_la_LIBADD = 
am_lib_tpcd_la_OBJECTS =  tpcd_glue.lo tpcd.lo
lib_tpcd_la_OBJECTS =  $(am_lib_tpcd_la_OBJECTS)
lib_trans_la_LDFLAGS = 
lib_trans_la_LIBADD = 
am_lib_trans_la_OBJECTS =  trans_glue.lo trans.lo
lib_trans_la_OBJECTS =  $(am_lib_trans_la_OBJECTS)
lib_uchr_la_LDFLAGS = 
lib_uchr_la_LIBADD = 
am_lib_uchr_la_OBJECTS =  uchr_glue.lo uchr.lo
lib_uchr_la_OBJECTS =  $(am_lib_uchr_la_OBJECTS)
lib_unix_la_LDFLAGS = 
lib_unix_la_LIBADD = 
am_lib_unix_la_OBJECTS =  unix_glue.lo unix.lo
lib_unix_la_OBJECTS =  $(am_lib_unix_la_OBJECTS)
lib_url_la_LDFLAGS = 
lib_url_la_LIBADD = 
am_lib_url_la_OBJECTS =  url_glue.lo url.lo
lib_url_la_OBJECTS =  $(am_lib_url_la_OBJECTS)
lib_vector_la_LDFLAGS = 
lib_vector_la_LIBADD = 
am_lib_vector_la_OBJECTS =  vector_glue.lo vector.lo
lib_vector_la_OBJECTS =  $(am_lib_vector_la_OBJECTS)
lib_wisc_la_LDFLAGS = 
lib_wisc_la_LIBADD = 
am_lib_wisc_la_OBJECTS =  wisc_glue.lo wisc.lo
lib_wisc_la_OBJECTS =  $(am_lib_wisc_la_OBJECTS)
lib_xtables_la_LDFLAGS = 
lib_xtables_la_LIBADD = 
am_lib_xtables_la_OBJECTS =  xtables_glue.lo xtables.lo
lib_xtables_la_OBJECTS =  $(am_lib_xtables_la_OBJECTS)
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES =  $(lib_aggr_la_SOURCES) $(lib_alarm_la_SOURCES) \
$(lib_algebra_la_SOURCES) $(lib_arith_la_SOURCES) $(lib_bat_la_SOURCES) \
$(lib_bitset_la_SOURCES) $(lib_bitvector_la_SOURCES) \
$(lib_blob_la_SOURCES) $(lib_cluster_la_SOURCES) \
$(lib_counters_la_SOURCES) $(lib_ddbench_la_SOURCES) \
$(lib_decimal_la_SOURCES) $(lib_enum_la_SOURCES) $(lib_io_la_SOURCES) \
$(lib_iterator_la_SOURCES) $(lib_kernel_la_SOURCES) \
$(lib_lock_la_SOURCES) $(lib_malalgebra_la_SOURCES) \
$(lib_mmath_la_SOURCES) $(lib_monettime_la_SOURCES) \
$(lib_mprof_la_SOURCES) $(lib_oo7_la_SOURCES) $(lib_perfex_la_SOURCES) \
$(lib_qt_la_SOURCES) $(lib_radix_la_SOURCES) $(lib_salgebra_la_SOURCES) \
$(lib_stats_la_SOURCES) $(lib_str_la_SOURCES) $(lib_sys_la_SOURCES) \
$(lib_tcpip_la_SOURCES) $(lib_temporal_la_SOURCES) \
$(lib_tpcd_la_SOURCES) $(lib_trans_la_SOURCES) $(lib_uchr_la_SOURCES) \
$(lib_unix_la_SOURCES) $(lib_url_la_SOURCES) $(lib_vector_la_SOURCES) \
$(lib_wisc_la_SOURCES) $(lib_xtables_la_SOURCES)
HEADERS =  $(plaininclude_HEADERS)

depcomp = 
DIST_COMMON =  $(plaininclude_HEADERS) Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

GZIP_ENV = --best
SOURCES = $(lib_aggr_la_SOURCES) $(lib_alarm_la_SOURCES) $(lib_algebra_la_SOURCES) $(lib_arith_la_SOURCES) $(lib_bat_la_SOURCES) $(lib_bitset_la_SOURCES) $(lib_bitvector_la_SOURCES) $(lib_blob_la_SOURCES) $(lib_cluster_la_SOURCES) $(lib_counters_la_SOURCES) $(lib_ddbench_la_SOURCES) $(lib_decimal_la_SOURCES) $(lib_enum_la_SOURCES) $(lib_io_la_SOURCES) $(lib_iterator_la_SOURCES) $(lib_kernel_la_SOURCES) $(lib_lock_la_SOURCES) $(lib_malalgebra_la_SOURCES) $(lib_mmath_la_SOURCES) $(lib_monettime_la_SOURCES) $(lib_mprof_la_SOURCES) $(lib_oo7_la_SOURCES) $(lib_perfex_la_SOURCES) $(lib_qt_la_SOURCES) $(lib_radix_la_SOURCES) $(lib_salgebra_la_SOURCES) $(lib_stats_la_SOURCES) $(lib_str_la_SOURCES) $(lib_sys_la_SOURCES) $(lib_tcpip_la_SOURCES) $(lib_temporal_la_SOURCES) $(lib_tpcd_la_SOURCES) $(lib_trans_la_SOURCES) $(lib_uchr_la_SOURCES) $(lib_unix_la_SOURCES) $(lib_url_la_SOURCES) $(lib_vector_la_SOURCES) $(lib_wisc_la_SOURCES) $(lib_xtables_la_SOURCES)
OBJECTS = $(am_lib_aggr_la_OBJECTS) $(am_lib_alarm_la_OBJECTS) $(am_lib_algebra_la_OBJECTS) $(am_lib_arith_la_OBJECTS) $(am_lib_bat_la_OBJECTS) $(am_lib_bitset_la_OBJECTS) $(am_lib_bitvector_la_OBJECTS) $(am_lib_blob_la_OBJECTS) $(am_lib_cluster_la_OBJECTS) $(am_lib_counters_la_OBJECTS) $(am_lib_ddbench_la_OBJECTS) $(am_lib_decimal_la_OBJECTS) $(am_lib_enum_la_OBJECTS) $(am_lib_io_la_OBJECTS) $(am_lib_iterator_la_OBJECTS) $(am_lib_kernel_la_OBJECTS) $(am_lib_lock_la_OBJECTS) $(am_lib_malalgebra_la_OBJECTS) $(am_lib_mmath_la_OBJECTS) $(am_lib_monettime_la_OBJECTS) $(am_lib_mprof_la_OBJECTS) $(am_lib_oo7_la_OBJECTS) $(am_lib_perfex_la_OBJECTS) $(am_lib_qt_la_OBJECTS) $(am_lib_radix_la_OBJECTS) $(am_lib_salgebra_la_OBJECTS) $(am_lib_stats_la_OBJECTS) $(am_lib_str_la_OBJECTS) $(am_lib_sys_la_OBJECTS) $(am_lib_tcpip_la_OBJECTS) $(am_lib_temporal_la_OBJECTS) $(am_lib_tpcd_la_OBJECTS) $(am_lib_trans_la_OBJECTS) $(am_lib_uchr_la_OBJECTS) $(am_lib_unix_la_OBJECTS) $(am_lib_url_la_OBJECTS) $(am_lib_vector_la_OBJECTS) $(am_lib_wisc_la_OBJECTS) $(am_lib_xtables_la_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .c .cc .h .lo .m .mil .mx .o .obj .proto.h
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/rules.mk
	cd $(top_srcdir) && $(AUTOMAKE) --foreign src/modules/plain/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLTLIBRARIES:

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)

distclean-libLTLIBRARIES:

maintainer-clean-libLTLIBRARIES:

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  echo " $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

lib_aggr.la: $(lib_aggr_la_OBJECTS) $(lib_aggr_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_aggr_la_LDFLAGS) $(lib_aggr_la_OBJECTS) $(lib_aggr_la_LIBADD) $(LIBS)

lib_alarm.la: $(lib_alarm_la_OBJECTS) $(lib_alarm_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_alarm_la_LDFLAGS) $(lib_alarm_la_OBJECTS) $(lib_alarm_la_LIBADD) $(LIBS)

lib_algebra.la: $(lib_algebra_la_OBJECTS) $(lib_algebra_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_algebra_la_LDFLAGS) $(lib_algebra_la_OBJECTS) $(lib_algebra_la_LIBADD) $(LIBS)

lib_arith.la: $(lib_arith_la_OBJECTS) $(lib_arith_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_arith_la_LDFLAGS) $(lib_arith_la_OBJECTS) $(lib_arith_la_LIBADD) $(LIBS)

lib_bat.la: $(lib_bat_la_OBJECTS) $(lib_bat_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_bat_la_LDFLAGS) $(lib_bat_la_OBJECTS) $(lib_bat_la_LIBADD) $(LIBS)

lib_bitset.la: $(lib_bitset_la_OBJECTS) $(lib_bitset_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_bitset_la_LDFLAGS) $(lib_bitset_la_OBJECTS) $(lib_bitset_la_LIBADD) $(LIBS)

lib_bitvector.la: $(lib_bitvector_la_OBJECTS) $(lib_bitvector_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_bitvector_la_LDFLAGS) $(lib_bitvector_la_OBJECTS) $(lib_bitvector_la_LIBADD) $(LIBS)

lib_blob.la: $(lib_blob_la_OBJECTS) $(lib_blob_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_blob_la_LDFLAGS) $(lib_blob_la_OBJECTS) $(lib_blob_la_LIBADD) $(LIBS)

lib_cluster.la: $(lib_cluster_la_OBJECTS) $(lib_cluster_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_cluster_la_LDFLAGS) $(lib_cluster_la_OBJECTS) $(lib_cluster_la_LIBADD) $(LIBS)

lib_counters.la: $(lib_counters_la_OBJECTS) $(lib_counters_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_counters_la_LDFLAGS) $(lib_counters_la_OBJECTS) $(lib_counters_la_LIBADD) $(LIBS)

lib_ddbench.la: $(lib_ddbench_la_OBJECTS) $(lib_ddbench_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_ddbench_la_LDFLAGS) $(lib_ddbench_la_OBJECTS) $(lib_ddbench_la_LIBADD) $(LIBS)

lib_decimal.la: $(lib_decimal_la_OBJECTS) $(lib_decimal_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_decimal_la_LDFLAGS) $(lib_decimal_la_OBJECTS) $(lib_decimal_la_LIBADD) $(LIBS)

lib_enum.la: $(lib_enum_la_OBJECTS) $(lib_enum_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_enum_la_LDFLAGS) $(lib_enum_la_OBJECTS) $(lib_enum_la_LIBADD) $(LIBS)

lib_io.la: $(lib_io_la_OBJECTS) $(lib_io_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_io_la_LDFLAGS) $(lib_io_la_OBJECTS) $(lib_io_la_LIBADD) $(LIBS)

lib_iterator.la: $(lib_iterator_la_OBJECTS) $(lib_iterator_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_iterator_la_LDFLAGS) $(lib_iterator_la_OBJECTS) $(lib_iterator_la_LIBADD) $(LIBS)

lib_kernel.la: $(lib_kernel_la_OBJECTS) $(lib_kernel_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_kernel_la_LDFLAGS) $(lib_kernel_la_OBJECTS) $(lib_kernel_la_LIBADD) $(LIBS)

lib_lock.la: $(lib_lock_la_OBJECTS) $(lib_lock_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_lock_la_LDFLAGS) $(lib_lock_la_OBJECTS) $(lib_lock_la_LIBADD) $(LIBS)

lib_malalgebra.la: $(lib_malalgebra_la_OBJECTS) $(lib_malalgebra_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_malalgebra_la_LDFLAGS) $(lib_malalgebra_la_OBJECTS) $(lib_malalgebra_la_LIBADD) $(LIBS)

lib_mmath.la: $(lib_mmath_la_OBJECTS) $(lib_mmath_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_mmath_la_LDFLAGS) $(lib_mmath_la_OBJECTS) $(lib_mmath_la_LIBADD) $(LIBS)

lib_monettime.la: $(lib_monettime_la_OBJECTS) $(lib_monettime_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_monettime_la_LDFLAGS) $(lib_monettime_la_OBJECTS) $(lib_monettime_la_LIBADD) $(LIBS)

lib_mprof.la: $(lib_mprof_la_OBJECTS) $(lib_mprof_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_mprof_la_LDFLAGS) $(lib_mprof_la_OBJECTS) $(lib_mprof_la_LIBADD) $(LIBS)

lib_oo7.la: $(lib_oo7_la_OBJECTS) $(lib_oo7_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_oo7_la_LDFLAGS) $(lib_oo7_la_OBJECTS) $(lib_oo7_la_LIBADD) $(LIBS)

lib_perfex.la: $(lib_perfex_la_OBJECTS) $(lib_perfex_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_perfex_la_LDFLAGS) $(lib_perfex_la_OBJECTS) $(lib_perfex_la_LIBADD) $(LIBS)

lib_qt.la: $(lib_qt_la_OBJECTS) $(lib_qt_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_qt_la_LDFLAGS) $(lib_qt_la_OBJECTS) $(lib_qt_la_LIBADD) $(LIBS)

lib_radix.la: $(lib_radix_la_OBJECTS) $(lib_radix_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_radix_la_LDFLAGS) $(lib_radix_la_OBJECTS) $(lib_radix_la_LIBADD) $(LIBS)

lib_salgebra.la: $(lib_salgebra_la_OBJECTS) $(lib_salgebra_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_salgebra_la_LDFLAGS) $(lib_salgebra_la_OBJECTS) $(lib_salgebra_la_LIBADD) $(LIBS)

lib_stats.la: $(lib_stats_la_OBJECTS) $(lib_stats_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_stats_la_LDFLAGS) $(lib_stats_la_OBJECTS) $(lib_stats_la_LIBADD) $(LIBS)

lib_str.la: $(lib_str_la_OBJECTS) $(lib_str_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_str_la_LDFLAGS) $(lib_str_la_OBJECTS) $(lib_str_la_LIBADD) $(LIBS)

lib_sys.la: $(lib_sys_la_OBJECTS) $(lib_sys_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_sys_la_LDFLAGS) $(lib_sys_la_OBJECTS) $(lib_sys_la_LIBADD) $(LIBS)

lib_tcpip.la: $(lib_tcpip_la_OBJECTS) $(lib_tcpip_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_tcpip_la_LDFLAGS) $(lib_tcpip_la_OBJECTS) $(lib_tcpip_la_LIBADD) $(LIBS)

lib_temporal.la: $(lib_temporal_la_OBJECTS) $(lib_temporal_la_DEPENDENCIES)
	$(CXXLINK) -rpath $(libdir) $(lib_temporal_la_LDFLAGS) $(lib_temporal_la_OBJECTS) $(lib_temporal_la_LIBADD) $(LIBS)

lib_tpcd.la: $(lib_tpcd_la_OBJECTS) $(lib_tpcd_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_tpcd_la_LDFLAGS) $(lib_tpcd_la_OBJECTS) $(lib_tpcd_la_LIBADD) $(LIBS)

lib_trans.la: $(lib_trans_la_OBJECTS) $(lib_trans_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_trans_la_LDFLAGS) $(lib_trans_la_OBJECTS) $(lib_trans_la_LIBADD) $(LIBS)

lib_uchr.la: $(lib_uchr_la_OBJECTS) $(lib_uchr_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_uchr_la_LDFLAGS) $(lib_uchr_la_OBJECTS) $(lib_uchr_la_LIBADD) $(LIBS)

lib_unix.la: $(lib_unix_la_OBJECTS) $(lib_unix_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_unix_la_LDFLAGS) $(lib_unix_la_OBJECTS) $(lib_unix_la_LIBADD) $(LIBS)

lib_url.la: $(lib_url_la_OBJECTS) $(lib_url_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_url_la_LDFLAGS) $(lib_url_la_OBJECTS) $(lib_url_la_LIBADD) $(LIBS)

lib_vector.la: $(lib_vector_la_OBJECTS) $(lib_vector_la_DEPENDENCIES)
	$(CXXLINK) -rpath $(libdir) $(lib_vector_la_LDFLAGS) $(lib_vector_la_OBJECTS) $(lib_vector_la_LIBADD) $(LIBS)

lib_wisc.la: $(lib_wisc_la_OBJECTS) $(lib_wisc_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_wisc_la_LDFLAGS) $(lib_wisc_la_OBJECTS) $(lib_wisc_la_LIBADD) $(LIBS)

lib_xtables.la: $(lib_xtables_la_OBJECTS) $(lib_xtables_la_DEPENDENCIES)
	$(LINK) -rpath $(libdir) $(lib_xtables_la_LDFLAGS) $(lib_xtables_la_OBJECTS) $(lib_xtables_la_LIBADD) $(LIBS)
.c.o:
	$(COMPILE) -c $<
.c.obj:
	$(COMPILE) -c `cygpath -w $<`
.c.lo:
	$(LTCOMPILE) -c -o $@ $<
.cc.o:
	$(CXXCOMPILE) -c -o $@ $<
.cc.obj:
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`
.cc.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

install-plainincludeHEADERS: $(plaininclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(plainincludedir)
	@list='$(plaininclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(plainincludedir)/$$f"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(plainincludedir)/$$f; \
	done

uninstall-plainincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(plaininclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(plainincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(plainincludedir)/$$f; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLTLIBRARIES
install-exec: install-exec-am

install-data-am: install-plainincludeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLTLIBRARIES uninstall-plainincludeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) all-local
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(plainincludedir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-rm -f Makefile.in
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-libLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLTLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLTLIBRARIES distclean-libLTLIBRARIES \
clean-libLTLIBRARIES maintainer-clean-libLTLIBRARIES \
uninstall-libLTLIBRARIES install-libLTLIBRARIES mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile \
mostlyclean-libtool distclean-libtool clean-libtool \
maintainer-clean-libtool uninstall-plainincludeHEADERS \
install-plainincludeHEADERS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-local all-redirect all-am all install-strip installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean

lock.c: lock.mx
io_glue.lo: io_glue.c blob.h io.proto.h io.h blob.proto.h
mprof.mil: mprof.mx
tpcd_glue.lo: tpcd_glue.c
algebra.mil: algebra.mx
lock.lo: lock.c
lock.m: lock.mx
algebra_glue.lo: algebra_glue.c
iterator.h: iterator.mx
iterator.m: iterator.mx
arith.proto.h: arith.m
decimal.mil: decimal.mx
iterator.c: iterator.mx
algebra_glue.c: algebra.m
str.c: str.mx
tpcd.proto.h: tpcd.m cluster.m
vector.mil: vector.mx
qt.lo: qt.c
mmath.mil: mmath.mx
lock_glue.c: lock.m
unix.proto.h: unix.m
ddbench_glue.c: ddbench.m xtables.m io.m enum.m blob.m
alarm.proto.h: alarm.m
kernel.proto.h: kernel.m
alarm.c: alarm.mx
bitset.proto.h: bitset.m
mmath.proto.h: mmath.m
arith_glue.lo: arith_glue.c arith.h
alarm.h: alarm.mx
oo7_glue.lo: oo7_glue.c
alarm.m: alarm.mx
salgebra.c: salgebra.mx
alarm.lo: alarm.c alarm.h
wisc.m: wisc.mx
oo7_glue.c: oo7.m
salgebra.m: salgebra.mx
cluster.m: cluster.mx
wisc.h: wisc.mx
cluster_glue.c: cluster.m
bat_glue.lo: bat_glue.c
cluster_glue.lo: cluster_glue.c
bat_glue.c: bat.m
stats.lo: stats.c
stats.proto.h: stats.m
wisc.c: wisc.mx
url.mil: url.mx
monettime.mil: monettime.mx
algebra.m: algebra.mx
unix.lo: unix.c
algebra.lo: algebra.c
url.c: url.mx
sys_glue.lo: sys_glue.c sys.proto.h
mprof_glue.c: mprof.m
radix_glue.lo: radix_glue.c radix.proto.h
url.lo: url.c url.proto.h
lock_glue.lo: lock_glue.c
url.m: url.mx
monettime_glue.lo: monettime_glue.c monettime.h monettime.proto.h
str_glue.c: str.m
unix.c: unix.mx
algebra.c: algebra.mx
perfex.mil: perfex.mx
iterator.lo: iterator.c iterator.h
blob_glue.lo: blob_glue.c blob.h blob.proto.h blob.proto.h
malalgebra_glue.lo: malalgebra_glue.c malalgebra.h malalgebra.proto.h
malalgebra.proto.h: malalgebra.m
blob_glue.c: blob.m
radix.m: radix.mx
xtables.mil: xtables.mx
counters.mil: counters.mx
radix.lo: radix.c radix.proto.h
radix.mil: radix.mx
str.proto.h: str.m
iterator.mil: iterator.mx
uchr.mil: uchr.mx
arith.mil: arith.mx
str_glue.lo: str_glue.c
sys.proto.h: sys.m
mmath.m: mmath.mx
bitset.c: bitset.mx
kernel.lo: kernel.c
uchr_glue.c: uchr.m
mmath.h: mmath.mx
kernel.c: kernel.mx
mmath_glue.c: mmath.m
kernel.m: kernel.mx
bitset.h: bitset.mx
mmath_glue.lo: mmath_glue.c mmath.proto.h mmath.h
enum_glue.c: enum.m
bitset.lo: bitset.c bitset.proto.h bitset.h
mmath.c: mmath.mx
bitset.m: bitset.mx
io.m: io.mx
io.lo: io.c blob.h io.proto.h io.h blob.proto.h
bitvector_glue.lo: bitvector_glue.c
io.h: io.mx
bitvector.lo: bitvector.c
bitset.mil: bitset.mx
bitvector.m: bitvector.mx
counters_glue.lo: counters_glue.c counters.h
io.c: io.mx
mprof_glue.lo: mprof_glue.c mprof.proto.h mprof.h
bat.m: bat.mx
kernel_glue.c: kernel.m
temporal.lo: temporal.cc temporal.proto.h temporal.h
alarm_glue.lo: alarm_glue.c alarm.h
unix_glue.c: unix.m
alarm_glue.c: alarm.m
bat.c: bat.mx
oo7.m: oo7.mx
str.h: str.mx
oo7.lo: oo7.c
tpcd.m: tpcd.mx
str.m: str.mx
enum.c: enum.mx
str.lo: str.c
qt.m: qt.mx
tcpip_glue.c: tcpip.m
qt.c: qt.mx
bitvector_glue.c: bitvector.m io.m blob.m
wisc.lo: wisc.c wisc.proto.h
tpcd.c: tpcd.mx
oo7.c: oo7.mx
wisc_glue.c: wisc.m
counters_glue.c: counters.m
perfex_glue.lo: perfex_glue.c perfex.h
blob.proto.h: blob.m
tcpip_glue.lo: tcpip_glue.c tcpip.proto.h tcpip.h
oo7.proto.h: oo7.m
monettime.h: monettime.mx
arith.m: arith.mx
monettime.proto.h: monettime.m
arith.lo: arith.c arith.h
arith.h: arith.mx
monettime.m: monettime.mx
temporal.cc: temporal.mx
monettime.lo: monettime.c monettime.h monettime.proto.h
xtables.proto.h: xtables.m
monettime.c: monettime.mx
blob.mil: blob.mx
arith.c: arith.mx
tcpip.h: tcpip.mx
perfex.proto.h: perfex.m
stats.m: stats.mx
salgebra_glue.lo: salgebra_glue.c salgebra.h salgebra.proto.h
radix_glue.c: radix.m
tcpip.m: tcpip.mx
decimal.proto.h: decimal.m
tcpip.lo: tcpip.c tcpip.proto.h tcpip.h
uchr.proto.h: uchr.m
tpcd_glue.c: tpcd.m cluster.m
tcpip.c: tcpip.mx
stats.c: stats.mx
vector.lo: vector.cc vector.h vector.proto.h
blob.h: blob.mx
uchr.m: uchr.mx
uchr.lo: uchr.c uchr.proto.h
vector_glue.lo: vector_glue.c vector.h vector.proto.h
vector.cc: vector.mx
temporal_glue.lo: temporal_glue.c temporal.proto.h temporal.h
vector_glue.c: vector.m mmath.m
url_glue.c: url.m
uchr.c: uchr.mx
wisc_glue.lo: wisc_glue.c wisc.proto.h
aggr.proto.h: aggr.m
url.proto.h: url.m
bitset_glue.c: bitset.m
io.proto.h: io.m blob.m
qt_glue.lo: qt_glue.c
mprof.h: mprof.mx
malalgebra.mil: malalgebra.mx
mprof.lo: mprof.c mprof.proto.h mprof.h
mprof.m: mprof.mx
mprof.c: mprof.mx
uchr_glue.lo: uchr_glue.c uchr.proto.h
str.mil: str.mx
aggr_glue.c: aggr.m
perfex_glue.c: perfex.m
tcpip.proto.h: tcpip.m
aggr_glue.lo: aggr_glue.c
temporal.mil: temporal.mx
trans_glue.lo: trans_glue.c
bitvector.proto.h: bitvector.m io.m blob.m
ddbench_glue.lo: ddbench_glue.c ddbench.h io.h enum.proto.h
enum.proto.h: enum.m
trans_glue.c: trans.m
iterator.proto.h: iterator.m
qt.proto.h: qt.m uchr.m bitvector.m stats.m io.m blob.m
ddbench.mil: ddbench.mx
enum.m: enum.mx
enum_glue.lo: enum_glue.c
enum.lo: enum.c
perfex.c: perfex.mx
kernel_glue.lo: kernel_glue.c
perfex.lo: perfex.c perfex.h
perfex.m: perfex.mx
perfex.h: perfex.mx
xtables.lo: xtables.c xtables.proto.h
aggr.m: aggr.mx
xtables.m: xtables.mx
aggr.lo: aggr.c
monettime_glue.c: monettime.m
wisc.proto.h: wisc.m
vector.proto.h: vector.m mmath.m
xtables.c: xtables.mx
aggr.c: aggr.mx
stats_glue.lo: stats_glue.c
bitvector.mil: bitvector.mx
decimal_glue.c: decimal.m
aggr.mil: aggr.mx
bat.proto.h: bat.m
stats_glue.c: stats.m
decimal_glue.lo: decimal_glue.c decimal.proto.h decimal.h
sys.lo: sys.c sys.proto.h
sys_glue.c: sys.m
sys.m: sys.mx
algebra.proto.h: algebra.m
sys.h: sys.mx
bitvector.c: bitvector.mx
tpcd.lo: tpcd.c
sys.c: sys.mx
io_glue.c: io.m blob.m
mprof.proto.h: mprof.m
decimal.m: decimal.mx
blob.lo: blob.c blob.h blob.proto.h blob.proto.h
decimal.lo: decimal.c decimal.proto.h decimal.h
blob.m: blob.mx
cluster.proto.h: cluster.m
decimal.h: decimal.mx
arith_glue.c: arith.m
temporal.proto.h: temporal.m
url_glue.lo: url_glue.c url.proto.h
bitset_glue.lo: bitset_glue.c bitset.proto.h bitset.h
blob.c: blob.mx
decimal.c: decimal.mx
radix.c: radix.mx
malalgebra.lo: malalgebra.c malalgebra.h malalgebra.proto.h
malalgebra.m: malalgebra.mx
malalgebra_glue.c: malalgebra.m
malalgebra.h: malalgebra.mx
counters.c: counters.mx
counters.m: counters.mx
counters.lo: counters.c counters.h
malalgebra.c: malalgebra.mx
io.mil: io.mx
trans.proto.h: trans.m
temporal.m: temporal.mx
salgebra.mil: salgebra.mx
salgebra.proto.h: salgebra.m algebra.m
temporal.h: temporal.mx
salgebra_glue.c: salgebra.m algebra.m
counters.h: counters.mx
vector.m: vector.mx
temporal_glue.c: temporal.m
vector.h: vector.mx
unix_glue.lo: unix_glue.c
cluster.c: cluster.mx
mmath.lo: mmath.c mmath.proto.h mmath.h
iterator_glue.lo: iterator_glue.c iterator.h
bat.lo: bat.c
ddbench.proto.h: ddbench.m xtables.m io.m enum.m blob.m
qt_glue.c: qt.m uchr.m bitvector.m stats.m io.m blob.m
cluster.lo: cluster.c
iterator_glue.c: iterator.m
lock.proto.h: lock.m
ddbench.lo: ddbench.c ddbench.h io.h enum.proto.h
salgebra.h: salgebra.mx
ddbench.m: ddbench.mx
salgebra.lo: salgebra.c salgebra.h salgebra.proto.h
ddbench.h: ddbench.mx
trans.c: trans.mx
trans.m: trans.mx
unix.m: unix.mx
trans.lo: trans.c
ddbench.c: ddbench.mx
xtables_glue.lo: xtables_glue.c xtables.proto.h
xtables_glue.c: xtables.m
counters.proto.h: counters.m
radix.proto.h: radix.m

%.h: %.mx
	$(MX) $(MXFLAGS) -x h $<

%.c: %.mx
	$(MX) $(MXFLAGS) -x c $<

%_tab.y: %.mx
	$(MX) $(MXFLAGS) -x y $< 
	$(MV) $*.y $@

%_yy.l: %.mx
	$(MX) $(MXFLAGS) -x l $< 
	$(MV) $*.l $@

%.cc: %.mx
	$(MX) $(MXFLAGS) -x C $<

%_tab.yy: %.mx
	$(MX) $(MXFLAGS) -x Y $< 
	$(MV) $*.yy $@

%_yy.ll: %.mx
	$(MX) $(MXFLAGS) -x L $<
	$(MV) $*.ll $@

%.m: %.mx
	$(MX) $(MXFLAGS) -x m $<

%.mil: %.mx
	$(MX) $(MXFLAGS) -x mil $<

%.proto.h: %.m
	$(MEL) $(INCLUDES) -o $@ -proto $<

%_glue.c: %.m
	$(MEL) $(INCLUDES) -o $@ -glue $<

all-local: $(BUILT_SOURCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
