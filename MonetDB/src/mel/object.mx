@f object
@a Niels Nes

@h
#ifndef _OBJECT_H_
#define _OBJECT_H_

#include "symbol.h"
#include "list.h"


class Object : public Symbol {
    public:
	Object( int t, char *n, const Symbol *arg = NULL ); 

	const Symbol *arg() const;

	virtual ostream &print( language *l, ostream &o ) const ;
    private:
	const Symbol *_arg;
};
#endif // _OBJECT_H_

@C
#include "object.h"
#include "language.h"
#include <string.h>


Object::Object( int t, char *n, const Symbol *arg ) : Symbol(t,n) {
	_arg = arg;
}

const Symbol *Object::arg() const {
	return _arg;
}

ostream &Object::print( language *l, ostream &o ) const {
	return l->gen_object( o, *this );
}
