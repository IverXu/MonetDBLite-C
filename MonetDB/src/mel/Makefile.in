# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
BASH = @BASH@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@
DLLTOOL = @DLLTOOL@
DL_LIBS = @DL_LIBS@
LEX = @LEX@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MALLOC_LIBS = @MALLOC_LIBS@
MV = @MV@
OBJC = @OBJC@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
READLINE_LIBS = @READLINE_LIBS@
RM = @RM@
SOCKET_LIBS = @SOCKET_LIBS@
THREAD = @THREAD@
THREAD_LIBS = @THREAD_LIBS@
VERSION = @VERSION@
YACC = @YACC@
thread_safe_flag_spec = @thread_safe_flag_spec@

AUTOMAKE_OPTIONS = no-dependencies 1.4 foreign

mel_SOURCES = FileInfo.cc FileInfo.h atomops.cc atomops.h drop.cc drop.h list.h prelude.cc prelude.h ListIterator.h bat_arg.cc bat_arg.h epilogue.cc epilogue.h load.cc load.h proto.cc proto.h acc.cc acc.h builtin.cc builtin.h glue.cc glue.h mel.cc mel.h mel_tab.yy mel_tab.h mel_yy.ll symbol.cc symbol.h accops.cc accops.h command.cc command.h html.cc html.h module.cc module.h symtable.cc symtable.h any_arg.cc any_arg.h debug.cc debug.h iterator.cc iterator.h object.cc object.h type_arg.cc type_arg.h atom.cc atom.h depend.cc depend.h language.h operator.cc operator.h use.cc use.h atom_arg.cc atom_arg.h dependency.cc dependency.h link.cc link.h ops.cc ops.h var_arg.cc var_arg.h
YFLAGS = -d
BUILT_SOURCES = FileInfo.cc FileInfo.h atomops.cc atomops.h drop.cc drop.h list.h prelude.cc prelude.h ListIterator.h bat_arg.cc bat_arg.h epilogue.cc epilogue.h load.cc load.h proto.cc proto.h acc.cc acc.h builtin.cc builtin.h glue.cc glue.h mel.cc mel.h mel_tab.yy mel_tab.h mel_yy.ll symbol.cc symbol.h accops.cc accops.h command.cc command.h html.cc html.h module.cc module.h symtable.cc symtable.h any_arg.cc any_arg.h debug.cc debug.h iterator.cc iterator.h object.cc object.h type_arg.cc type_arg.h atom.cc atom.h depend.cc depend.h language.h operator.cc operator.h use.cc use.h atom_arg.cc atom_arg.h dependency.cc dependency.h link.cc link.h ops.cc ops.h var_arg.cc var_arg.h
EXTRA_DIST = Makefile.ag Makefile.msc FileInfo.mx atomops.mx drop.mx list.mx prelude.mx ListIterator.mx bat_arg.mx epilogue.mx load.mx proto.mx acc.mx builtin.mx glue.mx mel.mx symbol.mx accops.mx command.mx html.mx module.mx symtable.mx any_arg.mx debug.mx iterator.mx object.mx type_arg.mx atom.mx depend.mx language.mx operator.mx use.mx atom_arg.mx dependency.mx link.mx ops.mx var_arg.mx
bin_PROGRAMS = mel

MEL = $(top_builddir)/src/mel/mel
MX = $(top_builddir)/src/utils/Mx/Mx

SUFFIXES = .m .mx .proto.h .mil
PRECIOUS = .m 
mkinstalldirs = $(SHELL) $(top_srcdir)/conf/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
mel_OBJECTS =  FileInfo.o atomops.o drop.o prelude.o bat_arg.o \
epilogue.o load.o proto.o acc.o builtin.o glue.o mel.o mel_tab.o \
mel_yy.o symbol.o accops.o command.o html.o module.o symtable.o \
any_arg.o debug.o iterator.o object.o type_arg.o atom.o depend.o \
operator.o use.o atom_arg.o dependency.o link.o ops.o var_arg.o
mel_LDADD = $(LDADD)
mel_DEPENDENCIES = 
mel_LDFLAGS = 
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LEXLIB = @LEXLIB@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in mel_tab.cc mel_yy.cc


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
SOURCES = $(mel_SOURCES)
OBJECTS = $(mel_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cc .ll .lo .m .mil .mx .o .proto.h .s .yy
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) $(top_srcdir)/rules.mk
	cd $(top_srcdir) && $(AUTOMAKE) --foreign src/mel/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

mel: $(mel_OBJECTS) $(mel_DEPENDENCIES)
	@rm -f mel
	$(CXXLINK) $(mel_LDFLAGS) $(mel_OBJECTS) $(mel_LDADD) $(LIBS)
.cc.o:
	$(CXXCOMPILE) -c $<
.cc.lo:
	$(LTCXXCOMPILE) -c $<
.ll.cc:
	$(LEX) $(AM_LFLAGS) $(LFLAGS) $< && mv $(LEX_OUTPUT_ROOT).c $@
.yy.cc:
	$(YACC) $(AM_YFLAGS) $(YFLAGS) $< && mv y.tab.c $*.cc
	if test -f y.tab.h; then \
	if cmp -s y.tab.h $*.h; then rm -f y.tab.h; else mv y.tab.h $*.h; fi; \
	else :; fi
mel_tab.hh: mel_tab.cc


tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src/mel

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-binPROGRAMS
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-am
all-am: Makefile $(PROGRAMS) all-local
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "mel_yyllmel_tabhhmel_tabcc$(BUILT_SOURCES)" || rm -f mel_yyll mel_tabhh mel_tabcc $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-local all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean

acc.o: acc.cc ops.h list.h acc.h ListIterator.h language.h symbol.h symtable.h module.h dependency.h atom.h atomops.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h mel.h mel_tab.h FileInfo.h use.h link.h depend.h proto.h html.h glue.h
dependency.o: dependency.cc symbol.h list.h dependency.h language.h mel.h ListIterator.h symtable.h module.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
dependency.h: dependency.mx
acc.h: acc.mx
builtin.o: builtin.cc symbol.h list.h builtin.h language.h mel.h ListIterator.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
prelude.cc: prelude.mx
builtin.h: builtin.mx
iterator.h: iterator.mx
atom.o: atom.cc ops.h list.h type_arg.h atom.h language.h symbol.h ListIterator.h symtable.h module.h dependency.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h mel.h mel_tab.h FileInfo.h use.h link.h depend.h proto.h html.h glue.h
atom.h: atom.mx
module.cc: module.mx
iterator.cc: iterator.mx
mel_yy.ll: mel.mx
var_arg.cc: var_arg.mx
any_arg.cc: any_arg.mx
iterator.o: iterator.cc command.h iterator.h ListIterator.h language.h symbol.h list.h mel_tab.h any_arg.h bat_arg.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h operator.h builtin.h object.h atom_arg.h type_arg.h var_arg.h prelude.h epilogue.h load.h drop.h mel.h FileInfo.h ops.h use.h link.h depend.h proto.h html.h glue.h
command.h: command.mx
link.cc: link.mx
type_arg.o: type_arg.cc symbol.h list.h type_arg.h language.h mel.h ListIterator.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
mel_yy.cc: mel_yy.ll
type_arg.h: type_arg.mx
accops.h: accops.mx
module.o: module.cc symbol.h list.h module.h language.h mel.h ListIterator.h symtable.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
mel_tab.cc: mel_tab.yy
module.h: module.mx
operator.o: operator.cc command.h list.h operator.h language.h symbol.h mel_tab.h ListIterator.h any_arg.h bat_arg.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h prelude.h epilogue.h load.h drop.h mel.h FileInfo.h ops.h use.h link.h depend.h proto.h html.h glue.h
mel.h: mel.mx
mel.cc: mel.mx
object.h: object.mx
mel.o: mel.cc symtable.h symbol.h list.h FileInfo.h ops.h atomops.h accops.h type_arg.h mel.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h module.h dependency.h atom.h acc.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h language.h ListIterator.h
builtin.cc: builtin.mx
operator.h: operator.mx
proto.h: proto.mx
list.h: list.mx
object.o: object.cc symbol.h list.h object.h language.h mel.h ListIterator.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
proto.o: proto.cc language.h proto.h ListIterator.h mel_tab.h symbol.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h list.h FileInfo.h ops.h mel.h use.h link.h depend.h html.h glue.h
FileInfo.o: FileInfo.cc list.h FileInfo.h mel.h ListIterator.h symtable.h symbol.h ops.h atomops.h accops.h type_arg.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h module.h dependency.h atom.h acc.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h language.h
bat_arg.o: bat_arg.cc symbol.h list.h type_arg.h bat_arg.h language.h mel.h ListIterator.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
load.cc: load.mx
symtable.h: symtable.mx
var_arg.o: var_arg.cc symbol.h list.h type_arg.h var_arg.h iterator.h language.h mel.h ListIterator.h command.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h operator.h builtin.h object.h atom_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
symtable.o: symtable.cc symbol.h symtable.h list.h mel.h language.h ListIterator.h FileInfo.h ops.h atomops.h accops.h type_arg.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h module.h dependency.h atom.h acc.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h
html.cc: html.mx
proto.cc: proto.mx
load.o: load.cc symbol.h load.h language.h list.h mel.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h drop.h ListIterator.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
use.o: use.cc language.h use.h ListIterator.h symbol.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h list.h mel.h ops.h mel_tab.h FileInfo.h link.h depend.h proto.h html.h glue.h
use.h: use.mx
load.h: load.mx
mel_tab.o: mel_tab.cc symtable.h symbol.h list.h FileInfo.h ops.h atomops.h accops.h type_arg.h mel.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h module.h dependency.h atom.h acc.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h language.h ListIterator.h
type_arg.cc: type_arg.mx
ops.cc: ops.mx
command.cc: command.mx
link.h: link.mx
link.o: link.cc language.h list.h link.h ListIterator.h symbol.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h mel.h ops.h mel_tab.h FileInfo.h use.h depend.h proto.h html.h glue.h
any_arg.o: any_arg.cc symbol.h list.h type_arg.h any_arg.h language.h mel.h ListIterator.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
atom_arg.cc: atom_arg.mx
FileInfo.h: FileInfo.mx
FileInfo.cc: FileInfo.mx
any_arg.h: any_arg.mx
mel_yy.o: mel_yy.cc symtable.h symbol.h list.h FileInfo.h ops.h atomops.h accops.h type_arg.h mel.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h module.h dependency.h atom.h acc.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h language.h ListIterator.h
debug.h: debug.mx
debug.o: debug.cc language.h debug.h ListIterator.h mel.h symbol.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h list.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
ListIterator.h: ListIterator.mx
epilogue.h: epilogue.mx
prelude.h: prelude.mx
prelude.o: prelude.cc symbol.h prelude.h language.h list.h mel.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h epilogue.h load.h drop.h ListIterator.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
accops.cc: accops.mx
atom.cc: atom.mx
debug.cc: debug.mx
bat_arg.cc: bat_arg.mx
html.h: html.mx
language.h: language.mx
mel_tab.h: mel_tab.yy
mel_tab.yy: mel.mx
ops.h: ops.mx
glue.cc: glue.mx
html.o: html.cc language.h html.h ListIterator.h symbol.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h list.h mel.h ops.h mel_tab.h FileInfo.h use.h link.h depend.h proto.h glue.h
drop.h: drop.mx
ops.o: ops.cc symbol.h list.h ops.h language.h mel.h ListIterator.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
object.cc: object.mx
drop.o: drop.cc symbol.h drop.h language.h list.h mel.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h ListIterator.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
depend.o: depend.cc language.h depend.h ListIterator.h symbol.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h list.h mel.h ops.h mel_tab.h FileInfo.h use.h link.h proto.h html.h glue.h
symbol.h: symbol.mx
drop.cc: drop.mx
symbol.o: symbol.cc list.h symbol.h mel.h language.h ListIterator.h symtable.h FileInfo.h ops.h atomops.h accops.h type_arg.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h module.h dependency.h atom.h acc.h command.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h
depend.h: depend.mx
glue.h: glue.mx
glue.o: glue.cc language.h glue.h ListIterator.h mel.h mel_tab.h symbol.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h list.h FileInfo.h ops.h use.h link.h depend.h proto.h html.h
bat_arg.h: bat_arg.mx
atomops.o: atomops.cc ops.h list.h atomops.h language.h symbol.h ListIterator.h symtable.h module.h dependency.h atom.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h mel.h mel_tab.h FileInfo.h use.h link.h depend.h proto.h html.h glue.h
atomops.h: atomops.mx
accops.o: accops.cc ops.h list.h accops.h language.h symbol.h ListIterator.h symtable.h module.h dependency.h atom.h atomops.h acc.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h mel.h mel_tab.h FileInfo.h use.h link.h depend.h proto.h html.h glue.h
var_arg.h: var_arg.mx
depend.cc: depend.mx
symtable.cc: symtable.mx
epilogue.cc: epilogue.mx
atom_arg.h: atom_arg.mx
use.cc: use.mx
dependency.cc: dependency.mx
epilogue.o: epilogue.cc symbol.h epilogue.h language.h list.h mel.h symtable.h module.h dependency.h atom.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h atom_arg.h type_arg.h var_arg.h bat_arg.h any_arg.h prelude.h load.h drop.h ListIterator.h FileInfo.h ops.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
atom_arg.o: atom_arg.cc symbol.h atom.h list.h atom_arg.h language.h mel.h ops.h type_arg.h ListIterator.h symtable.h module.h dependency.h atomops.h acc.h accops.h command.h operator.h builtin.h iterator.h object.h var_arg.h bat_arg.h any_arg.h prelude.h epilogue.h load.h drop.h FileInfo.h mel_tab.h use.h link.h depend.h proto.h html.h glue.h
symbol.cc: symbol.mx
atomops.cc: atomops.mx
command.o: command.cc symbol.h list.h mel_tab.h command.h ListIterator.h language.h any_arg.h bat_arg.h mel.h symtable.h FileInfo.h ops.h atomops.h accops.h type_arg.h use.h link.h depend.h proto.h html.h glue.h module.h dependency.h atom.h acc.h operator.h builtin.h iterator.h object.h atom_arg.h var_arg.h prelude.h epilogue.h load.h drop.h
acc.cc: acc.mx
operator.cc: operator.mx

%.h: %.mx
	$(MX) $(MXFLAGS) -x h $<

%.c: %.mx
	$(MX) $(MXFLAGS) -x c $<

%_tab.y: %.mx
	$(MX) $(MXFLAGS) -x y $< 
	$(MV) $*.y $@

%_yy.l: %.mx
	$(MX) $(MXFLAGS) -x l $< 
	$(MV) $*.l $@

%.cc: %.mx
	$(MX) $(MXFLAGS) -x C $<

%_tab.yy: %.mx
	$(MX) $(MXFLAGS) -x Y $< 
	$(MV) $*.yy $@

%_yy.ll: %.mx
	$(MX) $(MXFLAGS) -x L $<
	$(MV) $*.ll $@

%.m: %.mx
	$(MX) $(MXFLAGS) -x m $<

%.mil: %.mx
	$(MX) $(MXFLAGS) -x mil $<

%.proto.h: %.m
	$(MEL) $(INCLUDES) -o $@ -proto $<

%.glue.c: %.m
	$(MEL) $(INCLUDES) -o $@ -glue $<

all-local: $(BUILT_SOURCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
mel_tab.h: mel_tab.cc
