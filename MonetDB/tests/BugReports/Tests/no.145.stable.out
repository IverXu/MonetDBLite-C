stdout of test 'no.145` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.145 milS -prelude no.145.prelude
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single -prelude no.145.prelude no.145.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 01:04:33 MET 2000.
#script:no.145.milS
#prelude:no.145.prelude

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!
# >Number:         145
# >Category:       Module_libgdk
# >Synopsis:       bug in BATmergejoin (gdk_relop.mx)
# >Confidential:   no
# >Severity:       critical
# >Priority:       high
# >Responsible:    boncz (Peter Boncz)
# >State:          closed
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Mon Mar  9 14:28:12 1998
# >Originator:     manegold@cwi.nl
# >Organization:
# >Release:        980101
# >Environment:
# all (although the error only occurs on IRIX with GNU=OFF)
# >Description:
# Tests 'FIX.suite_02/test_70` and 'suite_02/test_70`
# fail, actually, join() fails with a segfault in 
# BATmirror, as BATmirror is called with a 
# non-initialized BAT 'bn` in line 122 of gdk_relop.mx:
# 'BATflipflop(bn)`.
# I think this call is superfluous (or "at least" wrong).
# 
# I don't know, why this error does not occur when
# Mserver is compiled with GNU tools...
# 
# 	stefan
# 

setoid(oid(10000000));
module("unix");
# initialize the database
t:= new(int,int);
t.rename("k10_unique1");
t.persists(true);
t.import(sprintf("%s/no.145.k10_unique1",getenv("TSTTRGDIR")));
t.count.print;
[ 10000 ]
z:= new(int,int);
z.rename("k10_unique2");
z.persists(true);
z.import(sprintf("%s/no.145.k10_unique2",getenv("TSTTRGDIR")));
z.count.print;
[ 10000 ]
w:= new(int,int);
w.rename("k100_unique1");
w.persists(true);
w.import(sprintf("%s/no.145.k100_unique1",getenv("TSTTRGDIR")));
w.count.print;
[ 100000 ]
commit;
setoid(oid(2000000));
#test correct decisions in the join operation.
t:= k100_unique1.select(10,10);
t.count.print; k100_unique1.count.print;
[ 1 ]
[ 100000 ]
u:= t.copy;
#cpu.print;

z:= t.reverse.join(k100_unique1);
z.print;
#-----------------#
# BAT:	  tmp_32  #
# (int)	  (int)	  #
#-----------------#
[ 10,	  10	  ]
#cpu.print;
z:= k100_unique1.reverse.join(u);
#cpu.print;
z.print;
#-----------------#
# BAT:	  tmp_33  #
# (int)	  (int)	  #
#-----------------#
[ 10,	  10	  ]
quit;
