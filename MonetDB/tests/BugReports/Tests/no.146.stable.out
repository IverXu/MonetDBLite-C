stdout of test 'no.146` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.146 milS
#> Mtest:	Mtimeout -timeout 543 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.146.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Tue Apr 11 05:46:23 MET DST 2000.
#script:no.146.milS

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!
# >Number:         146
# >Category:       ODMG_java_rts
# >Synopsis:       loading module jOdmg yields error
# >Confidential:   no
# >Severity:       serious
# >Priority:       medium
# >Responsible:    frank (Frank Bos)
# >State:          closed
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Mon Mar  9 15:13:17 1998
# >Originator:     manegold@cwi.nl
# >Organization:
# >Release:        980101
# >Environment:
# SunOS5.6 (GNU=OFF)
# >Description:
# ================
# Test script:
# ----------------
# module("jOdmg");
# loaded;
# sigs("jOdmg");
# procs;
# quit;
# 
# ================
# stdout & stderr
# ----------------
# [...]
# #You are system administrator (adm)!
# GDKfree: corrupted data at 19252608
# module("jOdmg");
# !ERROR: in syntax at "AÅx ODLtrue := 1;"
# !                                       ^
# can't help you here, sorry.
# loaded;
# #---------------------------------#
# # module        | usage_count     #
# #---------------------------------#
# [ "kernel",       1               ]
# [ "arith",        1               ]
# [ "bat",          1               ]
# [ "algebra",      1               ]
# [ "sys",          1               ]
# [ "trans",        1               ]
# [ "jOdmg",        1               ]
# [ "blob",         1               ]
# [ "odmg",         1               ]
# sigs("jOdmg");
# #-----------------------------------------------------------------#
# # signature                                                       #
# #-----------------------------------------------------------------#
# [ "delObjs(bat[oid,int], odSet) : void"                           ]
# [ "followFetch(odSet, odSet, oid) : jarray"                       ]
# [ "getAtomIDs(odSet) : bat[int,int]"                              ]
# [ "getClassIDs(str, odSet) : bat[int,int]"                        ]
# [ "jget(jarray) : any"                                            ]
# [ "jlen(jarray) : int"                                            ]
# [ "jput(any) : jarray"                                            ]
# [ "jput(any, int, int) : jarray"                                  ]
# [ "jput2(any, int, int) : jarray2"                                ]
# [ "jtype(jarray) : int"                                           ]
# [ "lookup(str) : jarray"                                          ]
# [ "objFetch(bat[oid,any], bat[oid,any]) : bat[any,int]"           ]
# [ "objFetch(bat[oid,any], oid) : any"                             ]
# [ "objFind(bat[oid,any], odSet, any) : oid"                       ]
# [ "setFetch(bat[oid,any], bat[oid,any]) : bat[any,int]"           ]
# [ "setFetch(bat[oid,any], oid) : bat[any,int]"                    ]
# [ "setSelect(bat[oid,any], odSet, any, any) : bat[oid,int]"       ]
# [ "update(bat[any,any], odSet, odSet) : void"                     ]
# [ "updateSet(bat[oid,any], int, odSet, odSet) : void"             ]
# procs;
# #-----------------------------------------------------------------#
# # MIL Procedure                                                   #
# #-----------------------------------------------------------------#
# [ "ADDHELP(PTR addr, STR aut, STR dat, STR hlp, STR sig) : VOID"  ]
# [ "clear(BAT) : BAT"                                              ]
# [ "unique(bat[any::1,any::2]) : bat[any::1,any::2]"               ]
# [ "diff(bat[any::1,any::2],bat[any::1,any::2]) : bat[any::1,any::2]"  ]
# [ "intersect(bat[any::1,any::2],bat[any::1,any::2]) : bat[any::1,any::2]"  ]
# [ "union(bat[any::1,any::2],bat[any::1,any::2]) : bat[any::1,any::2]"  ]
# [ "help(PTR commmand_addr) : VOID"                                ]
# [ "help(STR command_name) : VOID"                                 ]
# [ "modules() : VOID"                                              ]
# [ "loaded() : VOID"                                               ]
# [ "sigs(..STR modname..) : VOID"                                  ]
# [ "dir() : VOID"                                                  ]
# [ "ls() : VOID"                                                   ]
# [ "procs() : VOID"                                                ]
# [ "clients() : VOID"                                              ]
# [ "vars() : VOID"                                                 ]
# [ "threads() : VOID"                                              ]
# [ "env() : VOID"                                                  ]
# [ "batsize(BAT) : INT"                                            ]
# [ "help_tpe: NO SIGNATURE AVAILABLE"                              ]
# [ "help_sig: NO SIGNATURE AVAILABLE"                              ]
# [ "col_name: NO SIGNATURE AVAILABLE"                              ]
# [ "environment: NO SIGNATURE AVAILABLE"                           ]
# drop("jOdmg");
# quit;

setoid(oid(2000000));

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "blob",	  2		  ]
[ "io",		  1		  ]
[ "jOdmg",	  1		  ]
[ "kernel",	  1		  ]
[ "odmg",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "tcpip",	  1		  ]
[ "trans",	  1		  ]
sigs("jOdmg");
#-----------------------------------------------------------------#
# signature							  #
#-----------------------------------------------------------------#
[ "cacheReadAccess(odObject) : void"				  ]
[ "cacheWriteAccess(odObject) : void"				  ]
[ "getAtomIDs(odSet) : odSet"					  ]
[ "getAttrIDs(str, str, odSet) : odSet"				  ]
[ "getBaseClass(oid) : oid"					  ]
[ "getClassIDs(str, odSet) : odSet"				  ]
[ "jTransactionABORT(int) : void"				  ]
[ "jTransactionCOMMIT(int) : void"				  ]
[ "jget(jarray) : any"						  ]
[ "jput(any, int) : jarray"					  ]
[ "jquote(str) : str"						  ]
[ "multifetch(odSet, odAttr) : odSet"				  ]
[ "multifetch_collection(odSet, odAttr) : odCollectionSet"	  ]
[ "registerClient(str) : void"					  ]
procs;
#-----------------------------------------------------------------------------------------#
# MIL Procedure										  #
#-----------------------------------------------------------------------------------------#
[ "ADDHELP(str, str, str, str, str) : void"						  ]
[ "DatabaseTransactionNEW() : any"							  ]
[ "ODLdestroy_odmg() : void"								  ]
[ "ODLnew_odmg() : void"								  ]
[ "arpc(..any..) : any"									  ]
[ "bbp() : BAT[str,int]"								  ]
[ "callFunction(str) : any"								  ]
[ "capacity(BAT[any,any]) : int"							  ]
[ "clear(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "clients() : void"									  ]
[ "col_name(BAT[any::1,any::2], str) : BAT[any::1,any::2]"				  ]
[ "cold(BAT[any::1,any::2]) : void"							  ]
[ "cpu() : BAT[str,int]"								  ]
[ "destroy(BAT[any,any]) : any"								  ]
[ "destroy(str) : any"									  ]
[ "destroy_object(int, int) : any"							  ]
[ "diff(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"			  ]
[ "dir() : void"									  ]
[ "dir(BAT[int,str]) : any"								  ]
[ "dir(str) : void"									  ]
[ "dir_leaks() : any"									  ]
[ "end_rec() : any"									  ]
[ "env() : void"									  ]
[ "environment() : BAT[str,str]"							  ]
[ "exit() : void"									  ]
[ "find(str, str) : any"								  ]
[ "head(BAT[any,any]) : int"								  ]
[ "help() : <predefinition>"								  ]
[ "help(str) : void"									  ]
[ "help_sig(oid) : void"								  ]
[ "help_tpe(int) : str"									  ]
[ "hot(BAT[any::1,any::2]) : void"							  ]
[ "htype(BAT[any,any]) : int"								  ]
[ "info(odBatCache) : BAT[int,any]"							  ]
[ "intTail(any) : any"									  ]
[ "intersect(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"		  ]
[ "io() : BAT[str,int]"									  ]
[ "jOdmgVoidCall(any, ..any..) : any"							  ]
[ "jOdmg_assign(any, ..any..) : any"							  ]
[ "jOdmg_call(any, any, ..any..) : any"							  ]
[ "jOdmg_check(int, any, any) : any"							  ]
[ "jOdmg_commit() : any"								  ]
[ "jOdmg_doCall(any, any, ..any..) : any"						  ]
[ "jOdmg_err(str) : any"								  ]
[ "jOdmg_find(str) : any"								  ]
[ "jOdmg_insert(any, oid) : str"							  ]
[ "jOdmg_match() : <predefinition>"							  ]
[ "jOdmg_match(any, oid) : str"								  ]
[ "jOdmg_obj(str, int) : str"								  ]
[ "jOdmg_readAttr(str, str, odObject) : any"						  ]
[ "jOdmg_readCall(any, any, ..any..) : any"						  ]
[ "jOdmg_str(BAT[any,any]) : str"							  ]
[ "jOdmg_str(any) : str"								  ]
[ "jOdmg_str(str) : str"								  ]
[ "jOdmg_writeAttr(str, odObject, any) : any"						  ]
[ "join(BAT[any::1,any::2], BAT[any::2,any::3], str, ..any..) : BAT[any::1,any::3]"	  ]
[ "likeselect(BAT[any::1,str], str) : BAT[any::1,oid]"					  ]
[ "load(str) : BAT[any,any]"								  ]
[ "loaded() : void"									  ]
[ "ls() : void"										  ]
[ "ls(str) : void"									  ]
[ "madvise(BAT[any::1,any::2], int) : BAT[any::1,any::2]"				  ]
[ "mem_usage() : BAT[str,lng]"								  ]
[ "mem_usage(int) : BAT[str,lng]"							  ]
[ "memory() : BAT[str,int]"								  ]
[ "mil_select(BAT[any::1,any::2], str, ..any..) : BAT[any::1,any::2]"			  ]
[ "mil_select(BAT[any::1,any::2], str, any::2, any::2) : BAT[any::1,any::2]"		  ]
[ "mmap(BAT[any::1,any::2], int) : BAT[any::1,any::2]"					  ]
[ "modules() : void"									  ]
[ "neg_select(BAT[any::1,any::2], str, ..any..) : BAT[any::1,any::2]"			  ]
[ "new(int, int) : BAT[any,any]"							  ]
[ "new(int, int, int) : BAT[any,any]"							  ]
[ "newOid(int) : any"									  ]
[ "new_object(int) : any"								  ]
[ "odBatCaches(int) : BAT[str,odBatCache]"						  ]
[ "odOIDnew(int) : oid"									  ]
[ "procs() : void"									  ]
[ "project(BAT[any::1,any]) : BAT[any::1,void]"						  ]
[ "readonly(BAT[any::1,any::2]) : int"							  ]
[ "readonly(BAT[any::1,any::2], int) : BAT[any::1,any::2]"				  ]
[ "rename(BAT[any::1,any::2], str) : BAT[any::1,any::2]"				  ]
[ "rev_select(BAT[any::1,any::2], str, any::2) : BAT[any::1,any::2]"			  ]
[ "save(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "semijoin(BAT[any::1,any::2], BAT[any::1,any]) : BAT[any::1,any::2]"			  ]
[ "sigs(str) : void"									  ]
[ "sort_ht(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "start_rec(str) : any"								  ]
[ "table(BAT[oid,any], str) : any"							  ]
[ "table(BAT[oid,any], str, int) : any"							  ]
[ "table(str) : any"									  ]
[ "table(str, str, int) : any"								  ]
[ "table_print(BAT[any,any], BAT[str,BAT], int, int) : any"				  ]
[ "table_setformat(BAT[any,any]) : str"							  ]
[ "tail(BAT[any,any]) : int"								  ]
[ "threads() : void"									  ]
[ "ttype(BAT[any,any]) : int"								  ]
[ "tunique(BAT[any,any::1]) : BAT[any::1,void]"						  ]
[ "union(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]"			  ]
[ "unique(BAT[any::1,any::2]) : BAT[any::1,any::2]"					  ]
[ "vars() : void"									  ]
[ "vm_usage() : BAT[str,lng]"								  ]
[ "vm_usage(int) : BAT[str,lng]"							  ]
quit;
