stdout of test 'no.011` in directory 'tests/BugReports` itself:

#> Mtest:	milS no.011 milS
#> Mtest:	Mtimeout -timeout 210 Mserver -modulesilent -yaccsilent -d8 -db tests_BugReports -single no.011.milS
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Fri Jan 14 19:36:03 MET 2000.
#script:no.011.milS

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!
# >Number:         11
# >Category:       Mserver
# >Synopsis:       batloop operator on new(int, nil) hangs...
# >Confidential:   no
# >Severity:       serious
# >Priority:       low
# >Responsible:    boncz
# >State:          closed
# >Class:          sw-bug
# >Submitter-Id:   unknown
# >Arrival-Date:   Mon Jul 14 17:30:01 1997
# >Originator:     jonas
# >Organization:
# >Release:        970101
# >Environment:
# 3.06 hacked
# >Description:
# The following hangs the Mserver:
# 
# f := new(int, nil);
# f.insert(1,10);
# f.insert(2,20);
# f.insert(3,30);
# f.print;
# f@batloop()  { $head.print; $tail.print; }

f := new(int, 0);
f.insert(1,10);
!ERROR: interpret: no matching MIL operator to 'insert(BAT[int,void], int, int)'.
!MAYBE YOU MEAN:
!	insert(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]
!	insert(BAT[any::1,any::2], any::1, any::2) : BAT[any::1,any::2]
f.insert(2,20);
!ERROR: interpret: no matching MIL operator to 'insert(BAT[int,void], int, int)'.
!MAYBE YOU MEAN:
!	insert(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]
!	insert(BAT[any::1,any::2], any::1, any::2) : BAT[any::1,any::2]
f.insert(3,30);
!ERROR: interpret: no matching MIL operator to 'insert(BAT[int,void], int, int)'.
!MAYBE YOU MEAN:
!	insert(BAT[any::1,any::2], BAT[any::1,any::2]) : BAT[any::1,any::2]
!	insert(BAT[any::1,any::2], any::1, any::2) : BAT[any::1,any::2]
f.print;
#-----------------#
# BAT:	  tmp_25  #
# (int)	  (void)  #
#-----------------#
f@batloop()  { $head.print; $tail.print; }
h := new(int, void);
h.insert(1,void(10));
!ERROR: CMDinsert: cannot insert non-nil values in a void column.
!ERROR: CMDinsert_bun: operation failed.
h.insert(2,void(20));
!ERROR: CMDinsert: cannot insert non-nil values in a void column.
!ERROR: CMDinsert_bun: operation failed.
h.insert(3,void(30));
!ERROR: CMDinsert: cannot insert non-nil values in a void column.
!ERROR: CMDinsert_bun: operation failed.
h.print;
#-----------------#
# BAT:	  tmp_26  #
# (int)	  (void)  #
#-----------------#
h@batloop()  { $head.print; $tail.print; }
k := new(int, void);
k.insert(1,void(nil));
k.insert(2,void(nil));
k.insert(3,void(nil));
k.print;
#-----------------#
# BAT:	  tmp_27  #
# (int)	  (void)  #
#-----------------#
[ 1,	  nil	  ]
[ 2,	  nil	  ]
[ 3,	  nil	  ]
k@batloop()  { $head.print; $tail.print; }
[ 1 ]
[ nil ]
[ 2 ]
[ nil ]
[ 3 ]
[ nil ]
g := new(int, int);
g.insert(1,10);
g.insert(2,20);
g.insert(3,30);
g.print;
#-----------------#
# BAT:	  tmp_28  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  10	  ]
[ 2,	  20	  ]
[ 3,	  30	  ]
g@batloop()  { $head.print; $tail.print; }
[ 1 ]
[ 10 ]
[ 2 ]
[ 20 ]
[ 3 ]
[ 30 ]
quit;
