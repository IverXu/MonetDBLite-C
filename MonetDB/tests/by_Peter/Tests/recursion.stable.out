stdout of test 'recursion` in directory 'tests/by_Peter` itself:

#> Mtest:	milM recursion milM
#> Mtest:	Mtimeout -timeout 1800 Mserver -modulesilent -yaccsilent -d8 -db tests_by_Peter recursion.milM
# Monet Database Server V4.1
# Copyright (c) 1993-1999, CWI & SION. All rights reserved.
# compiled for IRIX646.5/32bit on Mon Feb  7 14:03:36 MET 2000.
#script:recursion.milM

loaded;
#---------------------------------#
# module	| usage_count	  #
#---------------------------------#
[ "algebra",	  1		  ]
[ "arith",	  1		  ]
[ "bat",	  1		  ]
[ "kernel",	  1		  ]
[ "str",	  1		  ]
[ "sys",	  1		  ]
[ "trans",	  1		  ]

Try: modules;                - for other modules.
     ls;                     - for persistent bat listing.
     sigs("<module>")        - for available commands per module.
     help("<command>")       - for help one-liner for a command.

#You are system administrator (adm)!
# This tests the saveguards for highly recursive programs.
# The first p(0 invocation will give a physical out of stack error.  
# The others together generate a physical out-of-context error.
# This, however, is rather undeterministic and determines
# on the paralellism acheived.
# What it *should* do is not crash, and print the [42]

module(alarm);
proc p;
proc p(int i) : void := { if (i < 10000) p(i+1); }
p(100).fork;
p(300).fork;
p(301).fork;
p(302).fork;
p(303).fork;
p(304).fork;
sleep(10);
!ERROR: interpret: running out of physical stack space!
!ERROR: interpret: running out of physical stack space!
!ERROR: interpret: running out of physical stack space!
!ERROR: interpret: running out of physical stack space!
!ERROR: interpret: running out of physical stack space!
!ERROR: interpret: running out of physical stack space!
print(42);
[ 42 ]

quit;
